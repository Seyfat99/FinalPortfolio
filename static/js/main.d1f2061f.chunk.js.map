{"version":3,"sources":["components/Header/Header.js","components/Hero/Hero.js","components/About/About.js","components/Contact/Contact.js","components/Portfolio/PortfolioCard.js","components/Portfolio/Portfolio.js","components/Skills/Skills.jsx","components/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["Header","window","onscroll","stickyNav","nav","document","querySelector","sticky","offsetTop","pageYOffset","classList","add","remove","react_default","a","createElement","className","href","NavLink","to","Hero","src","alt","About","id","Contact","htmlFor","type","required","name","Portfolio","props","project","image","description","card","projects","map","i","PortfolioCard","key","Skills","Home","components_Header_Header","components_Hero_Hero","components_Portfolio_Portfolio","components_Skills_Skills","components_About_About","components_Contact_Contact","App","state","_this2","this","fetch","then","response","json","res","setState","_this3","BrowserRouter","basename","process","Switch","Route","exact","path","render","components_Home_Home","Component","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d1f2061f.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from 'react-router-dom';\n\nconst Header = () => {\n  window.onscroll = () => {\n    stickyNav();\n  };\n\n  const stickyNav = () => {\n    const nav = document.querySelector(\".top-nav\");\n    const sticky = nav.offsetTop; // number of pixels from the closest parent element\n\n    if (window.pageYOffset > sticky) {\n      // when page scrolls, the page offset becomes greater than 0\n      nav.classList.add(\"top-nav--sticky\"); // and adds background color\n    } else {\n      nav.classList.remove(\"top-nav--sticky\");\n    }\n  };\n\n  return (\n    <header>\n      <nav className=\"top-nav\">\n        <ul className=\"top-nav__unord-list\">\n          <li className=\"top-nav__logo\">\n            <a className=\"top-nav__logo-link\" href=\"/\">\n              SK\n            </a>\n          </li>\n          <li className=\"top-nav__list-item\">\n            <NavLink to=\"/\">Home</NavLink>\n          </li>\n          <li className=\"top-nav__list-item\">\n            <a href=\"#About\">About</a>\n          </li>\n          <li className=\"top-nav__list-item\">\n            <a href=\"#Portfolio\">Portfolio</a>\n          </li>\n          <li className=\"top-nav__list-item\">\n            <a href=\"#Contact\">Contact</a>\n          </li>\n        </ul>\n        <div className=\"top-nav__mobile-menu\">\n          <i className=\"fas fa-bars\" />\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Hero = () => {\n  return (\n    <div className=\"hero\">\n      <p>I'm A Junior Web Developer</p>\n      <h1>Seyfat Khamidov</h1>\n      <img src=\"../../../static/img/down-arrow.svg\" alt=\"Down Arrow\" />\n    </div>\n  );\n};\n\nexport default Hero;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <section className=\"about-wrap\" id=\"About\">\n      <h2>About Me</h2>\n      <div className=\"about-wrap__img-text-wrap\">\n        <div className=\"about-wrap__img-wrap\" />\n        <div className=\"about-wrap__text-wrap\">\n          <p>\n            Hello World! My name is Seyfat Khamidov and I am a junior web\n            developer. I was born in Russia but my ethnicity is Turkish. My\n            family and I moved to the USA in 2005 to better our lives through\n            the various oppurtunities. I'm 19 years old and want to pursue a\n            career in the technology field.\n          </p>\n          <p>\n            Other than coding, I like to spend my free time outside like going\n            to the mountains, lake or playing soccer with some friends. I also\n            like to binge watch shows on netflix which is very fun.\n          </p>\n        </div>\n      </div>\n\n      <button>My Resume</button>\n    </section>\n  );\n};\n\nexport default About;\n","import React from \"react\";\n\nconst Contact = () => {\n  return (\n    <section className=\"contact-wrap\" id=\"Contact\">\n      <h2>Let's Get In Touch!</h2>\n      <form>\n        <div className=\"contact-wrap__input-wrap\">\n          <label htmlFor=\"firstName\">First Name</label>\n          <input type=\"text\" required name=\"firstName\" id=\"firstName\" />\n        </div>\n        <div className=\"contact-wrap__input-wrap\">\n          <label htmlFor=\"lastName\">Last Name</label>\n          <input type=\"text\" required name=\"lastName\" id=\"lastName\" />\n        </div>\n        <div className=\"contact-wrap__input-wrap\">\n          <label htmlFor=\"subject\">Subject</label>\n          <input type=\"text\" required name=\"subject\" id=\"subject\" />\n        </div>\n        <div className=\"contact-wrap__input-wrap\">\n          <label htmlFor=\"Message\">Message</label>\n          <textarea type=\"text\" required name=\"Message\" id=\"Message\" />\n        </div>\n        <button type=\"submit\" className=\"contact-wrap__submit-btn\">\n          Submit\n        </button>\n      </form>\n    </section>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\n\nconst Portfolio = props => {\n  const { project } = props;\n  return (\n    <div className=\"project-card\">\n      <div className=\"project-card__img-wrap\">\n        <img src={project.image} alt={project.image} />\n      </div>\n      <p>{project.name}</p>\n      <p>{project.description}</p>\n    </div>\n  );\n};\n\nexport default Portfolio;\n","import React from \"react\";\nimport PortfolioCard from './PortfolioCard';\n\nconst Portfolio = (props) => {\n  const card = props.projects.map((project, i) => {\n    return (\n      <PortfolioCard key={i}\n      project={project} />\n    )\n  })\n  return (\n   <div className=\"cards-container\" id=\"Portfolio\">\n     <h2>Portfolio</h2>\n     {card}\n   </div>\n  )\n};\n\nexport default Portfolio;\n","import React from \"react\";\n\nconst Skills = () => {\n  return (\n    <section className=\"skills-wrap\">\n      <h2 className=\"skills-wrap__header\">Skills</h2>\n      <div className=\"skills-wrap__skill-container\">\n        <h2 className=\"skills-wrap__skill-header\">Front-End</h2>\n        <ul className=\"skills-wrap__frontend\">\n          <li>\n            <i className=\"devicon-html5-plain colored\" />\n            <span>HTML5</span>\n          </li>\n          <li>\n            <i className=\"devicon-css3-plain colored\" />\n            <span>CSS3</span>\n          </li>\n          <li>\n            <i className=\"devicon-sass-original colored\" />\n            <span>SCSS</span>\n          </li>\n          <li>\n            <i className=\"devicon-javascript-plain colored\" />\n            <span>JS</span>\n          </li>\n          <li>\n            <i className=\"devicon-react-original colored\" />\n            <span>React</span>\n          </li>\n        </ul>\n      </div>\n\n      <div className=\"skills-wrap__skill-container\">\n        <h2 className=\"skills-wrap__skill-header\">Back-End</h2>\n        <ul className=\"skills-wrap__backend\">\n          <li>\n            <i className=\"devicon-mongodb-plain colored\" />\n            <span>MongoDB</span>\n          </li>\n          <li>\n            <i className=\"devicon-mysql-plain colored\" />\n            <span>MySQL</span>\n          </li>\n          <li>\n            <i className=\"devicon-nodejs-plain colored\" />\n            <span>Node</span>\n          </li>\n        </ul>\n      </div>\n\n      <div className=\"skills-wrap__skill-container\">\n        <h2 className=\"skills-wrap__skill-header\">Tools</h2>\n        <ul className=\"skills-wrap__tools\">\n          <li>\n            <i className=\"devicon-git-plain colored\" />\n            <span>Git</span>\n          </li>\n          <li>\n            <i className=\"devicon-github-plain colored\" />\n            <span>GitHub</span>\n          </li>\n          <li>\n            <i className=\"devicon-visualstudio-plain colored\" />\n            <span>VS Code</span>\n          </li>\n        </ul>\n      </div>\n    </section>\n  );\n};\n\nexport default Skills;\n","import React from \"react\";\nimport Header from \"../Header/Header\";\nimport Hero from \"../Hero/Hero\";\nimport About from \"../About/About\";\nimport Contact from \"../Contact/Contact\";\nimport Portfolio from \"../Portfolio/Portfolio\";\nimport Skills from \"../Skills/Skills\";\nconst Home = (props) => {\n  return (\n    <div>\n      <Header />\n      <Hero />\n      <Portfolio projects={props.projects} />\n      <Skills />\n      <About />\n      <Contact />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport \"./assets/CSS/App.scss\";\nimport Home from \"./components/Home/Home\";\n\nclass App extends Component {\n  state = {\n    projects: []\n  };\n  componentDidMount() {\n    fetch(\"https://api.jsonbin.io/b/5bb7a238a97c597b3c603f61/2\")\n      .then(response => response.json())\n      .then(res => this.setState({ projects: res }));\n  }\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => <Home projects={this.state.projects} />}\n          />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}